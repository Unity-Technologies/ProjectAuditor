{
    "Items": [
        {
            "id": "PAC0000",
            "type": "UnityEngine.Camera",
            "method": "main",
            "areas": ["CPU"],
            "problem": "Camera.main property uses FindGameObjectsWithTag() internally and doesn't cache the result.",
            "solution": "It is advised to cache and use the camera component obtained from Game object instead.",
            "maximumVersion": "2019.4.8"
        },
        {
            "id": "PAC0001",
            "type": "UnityEngine.WebCamTexture",
            "method": "GetPixels",
            "areas": ["Memory"],
            "problem": "WebCamTexture.GetPixels() allocates managed memory.",
            "solution": "Use WebCamTexture.GetPixels32() instead."
        },
        {
            "id": "PAC0002",
            "type": "UnityEngine.WebCamTexture",
            "method": "GetPixels32",
            "areas": ["Memory"],
            "problem": "WebCamTexture.GetPixels32() allocates managed memory if a suitable array is not provided as a parameter.",
            "solution": "Ensure that you pass an array of Color32[] to this API method for it to fill out, to avoid creating a new array every time the method is called."
        },
        {
            "id": "PAC0003",
            "type": "UnityEngine.GeometryUtility",
            "method": "CalculateFrustumPlanes",
            "areas": ["Memory"],
            "problem": "Some versions of GeometryUtility.CalculateFrustumPlanes() allocate managed memory.",
            "solution": "Ensure that you use the CalculateFrustumPlanes(Matrix4x4 worldToProjectionMatrix, Plane[] planes) version of this API method, in order to be able to pass a pre-allocated Array of Planes."
        },
        {
            "id": "PAC0004",
            "type": "UnityEngine.Resources",
            "method": "FindObjectsOfTypeAll",
            "areas": ["Memory"],
            "problem": "Resources.FindObjectsOfTypeAll() allocates managed memory.",
            "solution": "Use Resources.FindObjectsOfTypeNonAlloc() instead."
        },
        {
            "id": "PAC0005",
            "type": "UnityEngine.Texture2D",
            "method": "GetPixels",
            "areas": ["Memory"],
            "problem": "Texture2D.GetPixels() allocates managed memory.",
            "solution": "Use Texture2D.GetRawTextureData() instead. This method returns a NativeArray of pixel data, and so does not allocate managed memory."
        },
        {
            "id": "PAC0006",
            "type": "UnityEngine.Texture2D",
            "method": "GetPixels32",
            "areas": ["Memory"],
            "problem": "Texture2D.GetPixels32() allocates managed memory.",
            "solution": "Use Texture2D.GetRawTextureData() instead. This method returns a NativeArray of pixel data, and so does not allocate managed memory."
        },
        {
            "id": "PAC0007",
            "type": "UnityEngine.Rigidbody",
            "method": "SweepTestAll",
            "areas": ["Memory"],
            "problem": "Rigidbody.SweepTestAll() allocates managed memory.",
            "solution": "Use Rigidbody.SweepTestNonAlloc() instead."
        },
        {
            "id": "PAC0008",
            "type": "UnityEngine.Physics",
            "method": "RaycastAll",
            "areas": ["Memory"],
            "problem": "Physics.RaycastAll() allocates managed memory.",
            "solution": "Use Physics.RaycastNonAlloc() instead."
        },
        {
            "id": "PAC0009",
            "type": "UnityEngine.Physics",
            "method": "CapsuleCastAll",
            "areas": ["Memory"],
            "problem": "Physics.CapsuleCastAll() allocates managed memory.",
            "solution": "Use Physics.CapsuleCastNonAlloc() instead."
        },
        {
            "id": "PAC0010",
            "type": "UnityEngine.Physics",
            "method": "SphereCastAll",
            "areas": ["Memory"],
            "problem": "Physics.SphereCastAll() allocates managed memory.",
            "solution": "Use Physics.SphereCastNonAlloc() instead."
        },
        {
            "id": "PAC0011",
            "type": "UnityEngine.Physics",
            "method": "BoxCastAll",
            "areas": ["Memory"],
            "problem": "Physics.BoxCastAll() allocates managed memory.",
            "solution": "Use Physics.BoxCastNonAlloc() instead."
        },
        {
            "id": "PAC0012",
            "type": "UnityEngine.Physics",
            "method": "OverlapCapsule",
            "areas": ["Memory"],
            "problem": "Physics.OverlapCapsule() allocates managed memory.",
            "solution": "Use Physics.OverlapCapsuleNonAlloc() instead."
        },
        {
            "id": "PAC0013",
            "type": "UnityEngine.Physics",
            "method": "OverlapSphere",
            "areas": ["Memory"],
            "problem": "Physics.OverlapSphere() allocates managed memory.",
            "solution": "Use Physics.OverlapSphereNonAlloc() instead."
        },
        {
            "id": "PAC0014",
            "type": "UnityEngine.Physics",
            "method": "OverlapBox",
            "areas": ["Memory"],
            "problem": "Physics.OverlapBox() allocates managed memory.",
            "solution": "Use Physics.OverlapBoxNonAlloc() instead."
        },
        {
            "id": "PAC0015",
            "type": "UnityEngine.Physics2D",
            "method": "LinecastAll",
            "areas": ["Memory"],
            "problem": "Physics2D.LinecastAll() allocates managed memory.",
            "solution": "Use Physics2D.LinecastNonAlloc() instead."
        },
        {
            "id": "PAC0016",
            "type": "UnityEngine.Physics2D",
            "method": "RaycastAll",
            "areas": ["Memory"],
            "problem": "Physics2D.RaycastAll() allocates managed memory.",
            "solution": "Use Physics2D.RaycastNonAlloc() instead."
        },
        {
            "id": "PAC0017",
            "type": "UnityEngine.Physics2D",
            "method": "CircleCastAll",
            "areas": ["Memory"],
            "problem": "Physics2D.CircleCastAll() allocates managed memory.",
            "solution": "Use Physics2D.CircleCastNonAlloc() instead."
        },
        {
            "id": "PAC0018",
            "type": "UnityEngine.Physics2D",
            "method": "BoxCastAll",
            "areas": ["Memory"],
            "problem": "Physics2D.BoxCastAll() allocates managed memory.",
            "solution": "Use Physics2D.BoxCastNonAlloc() instead."
        },
        {
            "id": "PAC0019",
            "type": "UnityEngine.Physics2D",
            "method": "CapsuleCastAll",
            "areas": ["Memory"],
            "problem": "Physics2D.CapsuleCastAll() allocates managed memory.",
            "solution": "Use Physics2D.CapsuleCastNonAlloc() instead."
        },
        {
            "id": "PAC0020",
            "type": "UnityEngine.Physics2D",
            "method": "GetRayIntersectionAll",
            "areas": ["Memory"],
            "problem": "Physics2D.GetRayIntersectionAll() allocates managed memory.",
            "solution": "Use Physics2D.GetRayIntersectionNonAlloc() instead."
        },
        {
            "id": "PAC0021",
            "type": "UnityEngine.Physics2D",
            "method": "OverlapPointAll",
            "areas": ["Memory"],
            "problem": "Physics2D.OverlapPointAll() allocates managed memory.",
            "solution": "Use Physics2D.OverlapPointNonAlloc() instead."
        },
        {
            "id": "PAC0022",
            "type": "UnityEngine.Physics2D",
            "method": "OverlapCircleAll",
            "areas": ["Memory"],
            "problem": "Physics2D.OverlapCircleAll() allocates managed memory.",
            "solution": "Use Physics2D.OverlapCircleNonAlloc() instead."
        },
        {
            "id": "PAC0023",
            "type": "UnityEngine.Physics2D",
            "method": "OverlapBoxAll",
            "areas": ["Memory"],
            "problem": "Physics2D.OverlapBoxAll() allocates managed memory.",
            "solution": "Use Physics2D.OverlapBoxNonAlloc() instead."
        },
        {
            "id": "PAC0024",
            "type": "UnityEngine.Physics2D",
            "method": "OverlapAreaAll",
            "areas": ["Memory"],
            "problem": "Physics2D.OverlapAreaAll() allocates managed memory.",
            "solution": "Use Physics2D.OverlapAreaNonAlloc() instead."
        },
        {
            "id": "PAC0025",
            "type": "UnityEngine.Physics2D",
            "method": "OverlapCapsuleAll",
            "areas": ["Memory"],
            "problem": "Physics2D.OverlapCapsuleAll() allocates managed memory.",
            "solution": "Use Physics2D.OverlapCapsuleNonAlloc() instead."
        },
        {
            "id": "PAC0026",
            "type": "UnityEngine.Component",
            "method": "GetComponentsInChildren",
            "areas": ["Memory"],
            "problem": "Component.GetComponentsInChildren() allocates managed memory.",
            "solution": "Ensure you are using one of the versions of GameObject.GetComponentsInChildren() which accepts a List<T> as a parameter and populates it with the components it finds."
        },
        {
            "id": "PAC0027",
            "type": "UnityEngine.Component",
            "method": "GetComponentsInParent",
            "areas": ["Memory"],
            "problem": "Component.GetComponentsInParent() allocates managed memory.",
            "solution": "Ensure you are using one of the versions of GameObject.GetComponentsInParent() which accepts a List<T> as a parameter and populates it with the components it finds."
        },
        {
            "id": "PAC0028",
            "type": "UnityEngine.GameObject",
            "method": "GetComponentsInChildren",
            "areas": ["Memory"],
            "problem": "Some versions of GameObject.GetComponentsInChildren() allocate managed memory.",
            "solution": "Ensure you are using one of the versions of GameObject.GetComponentsInChildren() which accepts a List<T> as a parameter and populates it with the components it finds."
        },
        {
            "id": "PAC0029",
            "type": "UnityEngine.GameObject",
            "method": "GetComponentsInParent",
            "areas": ["Memory"],
            "problem": "Some versions of GameObject.GetComponentsInParent() allocate managed memory.",
            "solution": "Ensure you are using one of the versions of GameObject.GetComponentsInParent() which accepts a List<T> as a parameter and populates it with the components it finds."
        },
        {
            "id": "PAC0030",
            "type": "UnityEngine.Collider",
            "method": "OnTriggerStay",
            "areas": ["CPU"],
            "problem": "OnTriggerStay() methods can detrimentally affect performance if they perform a lot of processing or if there are many Colliders which implement this method.",
            "solution": "Profile CPU performance to look for bottlenecks, examine the contents of all OnTriggerStay() methods, and consider refactoring code to not use them."
        },
        {
            "id": "PAC0031",
            "type": "UnityEngine.MonoBehaviour",
            "method": "OnTriggerStay",
            "areas": ["CPU"],
            "problem": "OnTriggerStay() methods can detrimentally affect performance if they perform a lot of processing or if there are many MonoBehaviours which implement this method.",
            "solution": "Profile CPU performance to look for bottlenecks, examine the contents of all OnTriggerStay() methods, and consider refactoring code to not use them."
        },
        {
            "id": "PAC0032",
            "type": "UnityEngine.Collider2D",
            "method": "OnTriggerStay2D",
            "areas": ["CPU"],
            "problem": "OnTriggerStay2D() methods can detrimentally affect performance if they perform a lot of processing or if there are many Collider2Ds which implement this method.",
            "solution": "Profile CPU performance to look for bottlenecks, examine the contents of all OnTriggerStay2D() methods, and consider refactoring code to not use them."
        },
        {
            "id": "PAC0033",
            "type": "UnityEngine.MonoBehaviour",
            "method": "OnTriggerStay2D",
            "areas": ["CPU"],
            "problem": "OnTriggerStay2D() methods can detrimentally affect performance if they perform a lot of processing or if there are many MonoBehaviours which implement this method.",
            "solution": "Profile CPU performance to look for bottlenecks, examine the contents of all OnTriggerStay2D() methods, and consider refactoring code to not use them."
        },
        {
            "id": "PAC0034",
            "type": "UnityEngine.Collider",
            "method": "OnCollisionStay",
            "areas": ["CPU"],
            "problem": "OnCollisionStay() methods can detrimentally affect performance if they perform a lot of processing or if there are many Colliders which implement this method.",
            "solution": "Profile CPU performance to look for bottlenecks, examine the contents of all OnCollisionStay() methods, and consider refactoring code to not use them."
        },
        {
            "id": "PAC0035",
            "type": "UnityEngine.MonoBehaviour",
            "method": "OnCollisionStay",
            "areas": ["CPU"],
            "problem": "OnCollisionStay() methods can detrimentally affect performance if they perform a lot of processing or if there are many MonoBehaviours which implement this method.",
            "solution": "Profile CPU performance to look for bottlenecks, examine the contents of all OnCollisionStay() methods, and consider refactoring code to not use them."
        },
        {
            "id": "PAC0036",
            "type": "UnityEngine.Rigidbody",
            "method": "OnCollisionStay",
            "areas": ["CPU"],
            "problem": "OnCollisionStay() methods can detrimentally affect performance if they perform a lot of processing or if there are many RigidBodies which implement this method.",
            "solution": "Profile CPU performance to look for bottlenecks, examine the contents of all OnCollisionStay() methods, and consider refactoring code to not use them."
        },
        {
            "id": "PAC0037",
            "type": "UnityEngine.ImageConversion",
            "method": "LoadImage",
            "areas": ["Memory"],
            "problem": "ImageConversion.LoadImage() defaults to maintaining a CPU-accessible copy of the image. This is a waste of memory if not needed.",
            "solution": "If a CPU-accessible copy of the texture is not required, ensure that the markNonReadable flag passed into the method is set to true."
        },
        {
            "id": "PAC0039",
            "type": "UnityEngine.Renderer",
            "method": "material",
            "areas": ["GPU"],
            "problem": "Renderer.material: this property creates a unique copy of the Renderer's material. This breaks draw call batching and results in a higher number of draw calls, impacting rendering performance.",
            "solution": "If possible, use Renderer.sharedMaterial instead."
        },
        {
            "id": "PAC0051",
            "type": "UnityEngine.ComputeBuffer",
            "method": "GetData",
            "areas": ["CPU"],
            "problem": "ComputeBuffer.GetData() stalls the CPU until the GPU has finished accessing the buffer. This can lead to significant CPU performance problems",
            "solution": "Avoid reading back from ComputeBuffers if it is at all possible. If it's unavoidable, profile your project carefully and regularly to monitor the performance impact."
        },
        {
            "id": "PAC0052",
            "type": "UnityEngine.Texture2D",
            "method": "SetPixels",
            "areas": ["CPU"],
            "problem": "Texture2D.SetPixels() is slower than SetPixels32().",
            "solution": "Use Texture2D.SetPixels32() or GetRawTextureData()/Apply() instead."
        },
        {
            "id": "PAC0053",
            "type": "UnityEngine.Texture3D",
            "method": "SetPixels",
            "areas": ["CPU"],
            "problem": "Texture3D.SetPixels() is slower than SetPixels32().",
            "solution": "Use Texture3D.SetPixels32() instead."
        },
        {
            "id": "PAC0054",
            "type": "UnityEngine.Texture2DArray",
            "method": "SetPixels",
            "areas": ["CPU"],
            "problem": "Texture2DArray.SetPixels() is slower than SetPixels32().",
            "solution": "Use Texture2DArray.SetPixels32() instead."
        },
        {
            "id": "PAC0055",
            "type": "UnityEngine.CubemapArray",
            "method": "SetPixels",
            "areas": ["CPU"],
            "problem": "CubemapArray.SetPixels() is slower than SetPixels32().",
            "solution": "Use CubemapArray.SetPixels32() instead."
        },
        {
            "id": "PAC0056",
            "type": "UnityEngine.GameObject",
            "method": "SendMessage",
            "areas": ["CPU"],
            "problem": "GameObject.SendMessage() is a very slow and CPU-intensive method.",
            "solution": "Implement a custom system to replace SendMessage - get the components you want to send messages and call methods directly on them."
        },
        {
            "id": "PAC0057",
            "type": "UnityEngine.Component",
            "method": "SendMessage",
            "areas": ["CPU"],
            "problem": "Component.SendMessage() is a very slow and CPU-intensive method.",
            "solution": "Implement a custom system to replace SendMessage - get the components you want to send messages and call methods directly on them."
        },
        {
            "id": "PAC0058",
            "type": "UnityEngine.MonoBehaviour",
            "method": "OnGUI",
            "areas": ["CPU"],
            "problem": "OnGUI() is used by the legacy Immediate Mode GUI (IMGUI), which is extremely CPU-intensive. If a single OnGUI() method is present in a project's code, IMGUI will initialize and consume CPU time.",
            "solution": "Remove all OnGUI() methods from the project code."
        },
        {
            "id": "PAC0059",
            "type": "UnityEngine.AI.NavMeshPath",
            "method": "corners",
            "areas": ["Memory"],
            "problem": "The property AI.NavMeshPath.corners allocates managed memory.",
            "solution": "Use AI.NavMeshPath.GetCornersNonAlloc() instead"
        },
        {
            "id": "PAC0060",
            "type": "UnityEngine.Animator",
            "method": "parameters",
            "areas": ["Memory"],
            "problem": "The property Animator.parameters allocates managed memory.",
            "solution": "Use Animator.GetParameter() instead."
        },
        {
            "id": "PAC0061",
            "type": "UnityEngine.Animations.ParentConstraint",
            "method": "translationOffsets",
            "areas": ["Memory"],
            "problem": "The property Animations.ParentConstraint.translationOffsets allocates managed memory.",
            "solution": "Use Animations.ParentConstraint.GetTranslationOffset() instead."
        },
        {
            "id": "PAC0062",
            "type": "UnityEngine.Animations.ParentConstraint",
            "method": "rotationOffsets",
            "areas": ["Memory"],
            "problem": "The property Animations.ParentConstraint.rotationOffsets allocates managed memory.",
            "solution": "Use Animations.ParentConstraint.GetRotationOffset() instead."
        },
        {
            "id": "PAC0063",
            "type": "UnityEngine.AnimationCurve",
            "method": "keys",
            "areas": ["Memory"],
            "problem": "The property AnimationCurve.keys allocates managed memory.",
            "solution": "Use AnimationCurve.AddKey()/MoveKey()/RemoveKey() instead."
        },
        {
            "id": "PAC0066",
            "type": "UnityEngine.Camera",
            "method": "allCameras",
            "areas": ["Memory"],
            "problem": "The property Camera.allCameras allocates managed memory.",
            "solution": "Use Camera.GetAllCameras() instead."
        },
        {
            "id": "PAC0067",
            "type": "UnityEngine.Mesh",
            "method": "boneWeights",
            "areas": ["Memory"],
            "problem": "The property Mesh.boneWeights allocates managed memory.",
            "solution": "Use Mesh.GetAllBoneWeights() instead. This method returns a NativeArray of BoneWeight1, and so does not allocate managed memory."
        },
        {
            "id": "PAC0068",
            "type": "UnityEngine.Mesh",
            "method": "bindposes",
            "areas": ["Memory"],
            "problem": "The property Mesh.bindposes allocates managed memory.",
            "solution": "Use Mesh.GetBindposes() instead."
        },
        {
            "id": "PAC0069",
            "type": "UnityEngine.Mesh",
            "method": "vertices",
            "areas": ["Memory"],
            "problem": "The property Mesh.vertices allocates managed memory.",
            "solution": "Use Mesh.GetVertices() instead."
        },
        {
            "id": "PAC0070",
            "type": "UnityEngine.Mesh",
            "method": "normals",
            "areas": ["Memory"],
            "problem": "The property Mesh.normals allocates managed memory.",
            "solution": "Use Mesh.GetNormals() instead."
        },
        {
            "id": "PAC0071",
            "type": "UnityEngine.Mesh",
            "method": "tangents",
            "areas": ["Memory"],
            "problem": "The property Mesh.tangents allocates managed memory.",
            "solution": "Use Mesh.GetTangents() instead."
        },
        {
            "id": "PAC0072",
            "type": "UnityEngine.Mesh",
            "method": "uv",
            "areas": ["Memory"],
            "problem": "The property Mesh.uv allocates managed memory.",
            "solution": "Use Mesh.GetUVs() instead."
        },
        {
            "id": "PAC0073",
            "type": "UnityEngine.Mesh",
            "method": "uv1",
            "areas": ["Memory"],
            "problem": "The property Mesh.uv1 allocates managed memory.",
            "solution": "Use Mesh.GetUVs() instead."
        },
        {
            "id": "PAC0074",
            "type": "UnityEngine.Mesh",
            "method": "uv2",
            "areas": ["Memory"],
            "problem": "The property Mesh.uv2 allocates managed memory.",
            "solution": "Use Mesh.GetUVs() instead."
        },
        {
            "id": "PAC0075",
            "type": "UnityEngine.Mesh",
            "method": "uv3",
            "areas": ["Memory"],
            "problem": "The property Mesh.uv3 allocates managed memory.",
            "solution": "Use Mesh.GetUVs() instead."
        },
        {
            "id": "PAC0076",
            "type": "UnityEngine.Mesh",
            "method": "uv4",
            "areas": ["Memory"],
            "problem": "The property Mesh.uv4 allocates managed memory.",
            "solution": "Use Mesh.GetUVs() instead."
        },
        {
            "id": "PAC0077",
            "type": "UnityEngine.Mesh",
            "method": "uv5",
            "areas": ["Memory"],
            "problem": "The property Mesh.uv5 allocates managed memory.",
            "solution": "Use Mesh.GetUVs() instead."
        },
        {
            "id": "PAC0078",
            "type": "UnityEngine.Mesh",
            "method": "uv6",
            "areas": ["Memory"],
            "problem": "The property Mesh.uv6 allocates managed memory.",
            "solution": "Use Mesh.GetUVs() instead."
        },
        {
            "id": "PAC0079",
            "type": "UnityEngine.Mesh",
            "method": "uv7",
            "areas": ["Memory"],
            "problem": "The property Mesh.uv7 allocates managed memory.",
            "solution": "Use Mesh.GetUVs() instead."
        },
        {
            "id": "PAC0080",
            "type": "UnityEngine.Mesh",
            "method": "uv8",
            "areas": ["Memory"],
            "problem": "The property Mesh.uv8 allocates managed memory.",
            "solution": "Use Mesh.GetUVs() instead."
        },
        {
            "id": "PAC0081",
            "type": "UnityEngine.Mesh",
            "method": "colors",
            "areas": ["Memory"],
            "problem": "The property Mesh.colors allocates managed memory.",
            "solution": "Use Mesh.GetColors() instead."
        },
        {
            "id": "PAC0082",
            "type": "UnityEngine.Mesh",
            "method": "colors32",
            "areas": ["Memory"],
            "problem": "The property Mesh.colors32 allocates managed memory.",
            "solution": "Use Mesh.GetColors() instead."
        },
        {
            "id": "PAC0083",
            "type": "UnityEngine.Mesh",
            "method": "triangles",
            "areas": ["Memory"],
            "problem": "The property Mesh.triangles allocates managed memory.",
            "solution": "Use Mesh.GetTriangles() instead."
        },
        {
            "id": "PAC0084",
            "type": "UnityEngine.Renderer",
            "method": "materials",
            "areas": ["Memory"],
            "problem": "The property Renderer.materials allocates managed memory.",
            "solution": "Use Renderer.GetMaterials() instead."
        },
        {
            "id": "PAC0085",
            "type": "UnityEngine.Renderer",
            "method": "sharedMaterials",
            "areas": ["Memory"],
            "problem": "The property Renderer.sharedMaterials allocates managed memory.",
            "solution": "Use Renderer.GetSharedMaterials() instead."
        },
        {
            "id": "PAC0094",
            "type": "UnityEngine.Input",
            "method": "touches",
            "areas": ["Memory"],
            "problem": "The property Input.touches allocates managed memory.",
            "solution": "Use Input.GetTouch() instead."
        },
        {
            "id": "PAC0095",
            "type": "UnityEngine.Input",
            "method": "accelerationEvents",
            "areas": ["Memory"],
            "problem": "The property Input.accelerationEvents allocates managed memory.",
            "solution": "Use Input.GetAccelerationEvent() instead."
        },
        {
            "id": "PAC0096",
            "type": "UnityEngine.iOS.NotificationServices",
            "method": "localNotifications",
            "areas": ["Memory"],
            "problem": "The property iOS.NotificationServices.localNotifications allocates managed memory.",
            "solution": "Use iOS.NotificationServices.GetLocalNotification() instead.",
            "maximumVersion": "2021.3",
            "platforms": ["iOS"]
        },
        {
            "id": "PAC0097",
            "type": "UnityEngine.iOS.NotificationServices",
            "method": "remoteNotifications",
            "areas": ["Memory"],
            "problem": "The property iOS.NotificationServices.remoteNotifications allocates managed memory.",
            "solution": "Use iOS.NotificationServices.GetRemoteNotification() instead.",
            "maximumVersion": "2021.3",
            "platforms": ["iOS"]
        },
        {
            "id": "PAC0100",
            "type": "UnityEngine.GUISkin",
            "method": "customStyles",
            "areas": ["Memory"],
            "problem": "The property GUISkin.customStyles allocates managed memory.",
            "solution": "Use GUISkin.GetStyle() or GUISkin.FindStyle() instead."
        },
        {
            "id": "PAC0103",
            "type": "UnityEngine.Collision",
            "method": "contacts",
            "areas": ["Memory"],
            "problem": "The property Collision.contacts allocates managed memory.",
            "solution": "Use Collision.GetContacts() instead."
        },
        {
            "id": "PAC0104",
            "type": "UnityEngine.Collision2D",
            "method": "contacts",
            "areas": ["Memory"],
            "problem": "The property Collision2D.contacts allocates managed memory.",
            "solution": "Use Collision2D.GetContacts() instead."
        },

        {
            "id": "PAC0110",
            "type": "UnityEngine.TerrainData",
            "method": "treeInstances",
            "areas": ["Memory"],
            "problem": "The property TerrainData.treeInstances allocates managed memory.",
            "solution": "Use TerrainData.GetTreeInstance() instead."
        },
        {
            "id": "PAC0111",
            "type": "UnityEngine.TerrainData",
            "method": "alphamapTextures",
            "areas": ["Memory"],
            "problem": "The property TerrainData.alphamapTextures allocates managed memory.",
            "solution": "Use TerrainData.GetAlphamapTexture() instead."
        },
        {
            "id": "PAC0112",
            "type": "UnityEngine.Font",
            "method": "characterInfo",
            "areas": ["Memory"],
            "problem": "The property Font.characterInfo allocates managed memory.",
            "solution": "Use Font.GetCharacterInfo() instead."
        },
        {
            "id": "PAC0115",
            "type": "UnityEngine.Animator",
            "method": "GetCurrentAnimationClipState",
            "areas": ["Memory"],
            "problem": "Animator.GetCurrentAnimationClipState() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0116",
            "type": "UnityEngine.Animator",
            "method": "GetBehaviours",
            "areas": ["Memory"],
            "problem": "Animator.GetBehaviours() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0117",
            "type": "UnityEngine.AssetBundle",
            "method": "LoadAssetWithSubAssets",
            "areas": ["Memory"],
            "problem": "AssetBundle.LoadAssetWithSubAssets() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0118",
            "type": "UnityEngine.AssetBundle",
            "method": "LoadAllAssets",
            "areas": ["Memory"],
            "problem": "AssetBundle.LoadAllAssets() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0119",
            "type": "UnityEngine.AssetBundleManifest",
            "method": "GetAllAssetBundles",
            "areas": ["Memory"],
            "problem": "AssetBundleManifest.GetAllAssetBundles() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0120",
            "type": "UnityEngine.Resources",
            "method": "LoadAll",
            "areas": ["Memory"],
            "problem": "Resources.LoadAll() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0121",
            "type": "UnityEngine.Texture2D",
            "method": "PackTextures",
            "areas": ["Memory"],
            "problem": "Texture2D.PackTextures() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0122",
            "type": "UnityEngine.Cubemap",
            "method": "GetPixels",
            "areas": ["Memory"],
            "problem": "Cubemap.GetPixels() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0123",
            "type": "UnityEngine.Texture3D",
            "method": "GetPixels",
            "areas": ["Memory"],
            "problem": "Texture3D.GetPixels() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0124",
            "type": "UnityEngine.Texture3D",
            "method": "GetPixels32",
            "areas": ["Memory"],
            "problem": "Texture3D.GetPixels32() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0125",
            "type": "UnityEngine.Texture2DArray",
            "method": "GetPixels",
            "areas": ["Memory"],
            "problem": "Texture2DArray.GetPixels() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0126",
            "type": "UnityEngine.Texture2DArray",
            "method": "GetPixels32",
            "areas": ["Memory"],
            "problem": "Texture2DArray.GetPixels32() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0127",
            "type": "UnityEngine.CubemapArray",
            "method": "GetPixels",
            "areas": ["Memory"],
            "problem": "CubemapArray.GetPixels() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0128",
            "type": "UnityEngine.CubemapArray",
            "method": "GetPixels32",
            "areas": ["Memory"],
            "problem": "CubemapArray.GetPixels32() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0129",
            "type": "UnityEngine.Object",
            "method": "FindObjectsOfType",
            "areas": ["Memory"],
            "problem": "Object.FindObjectsOfType() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0130",
            "type": "UnityEngine.Windows.Crypto",
            "method": "ComputeMD5Hash",
            "areas": ["Memory"],
            "problem": "Windows.Crypto.ComputeMD5Hash() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0131",
            "type": "UnityEngine.Windows.File",
            "method": "ReadAllBytes",
            "areas": ["Memory"],
            "problem": "Windows.File.ReadAllBytes() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0132",
            "type": "UnityEngine.ImageConversion",
            "method": "EncodeToJPG",
            "areas": ["Memory"],
            "problem": "ImageConversion.EncodeToJPG() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0133",
            "type": "UnityEngine.ImageConversion",
            "method": "EncodeToEXR",
            "areas": ["Memory"],
            "problem": "ImageConversion.EncodeToEXR() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0134",
            "type": "UnityEngine.ImageConversion",
            "method": "EncodeToTGA",
            "areas": ["Memory"],
            "problem": "ImageConversion.EncodeToTGA() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0135",
            "type": "UnityEngine.ImageConversion",
            "method": "EncodeToPNG",
            "areas": ["Memory"],
            "problem": "ImageConversion.EncodeToPNG() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0136",
            "type": "UnityEngine.U2D.SpriteShapeUtility",
            "method": "Generate",
            "areas": ["Memory"],
            "problem": "U2D.SpriteShapeUtility.Generate() allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used.",
            "minimumVersion": "2019.3"
        },
        {
            "id": "PAC0138",
            "type": "UnityEngine.AI.NavMeshTriangulation",
            "method": "layers",
            "areas": ["Memory"],
            "problem": "The property AI.NavMeshTriangulation.layers allocates managed memory.",
            "solution": "Try to avoid calling this method in frequently-updated code. Ideally, this method should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0139",
            "type": "UnityEngine.AnimationClip",
            "method": "events",
            "areas": ["Memory"],
            "problem": "The property AnimationClip.events allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0140",
            "type": "UnityEngine.AnimatorOverrideController",
            "method": "animationClips",
            "areas": ["Memory"],
            "problem": "The property AnimatorOverrideController.animationClips allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0141",
            "type": "UnityEngine.HumanTrait",
            "method": "MuscleName",
            "areas": ["Memory"],
            "problem": "The property HumanTrait.MuscleName allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0142",
            "type": "UnityEngine.HumanTrait",
            "method": "BoneName",
            "areas": ["Memory"],
            "problem": "The property HumanTrait.BoneName allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0143",
            "type": "UnityEngine.RuntimeAnimatorController",
            "method": "animationClips",
            "areas": ["Memory"],
            "problem": "The property RuntimeAnimatorController.animationClips allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0144",
            "type": "UnityEngine.AssetBundleRequest",
            "method": "allAssets",
            "areas": ["Memory"],
            "problem": "The property AssetBundleRequest.allAssets allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0145",
            "type": "UnityEngine.Microphone",
            "method": "devices",
            "areas": ["Memory"],
            "problem": "The property Microphone.devices allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0146",
            "type": "UnityEngine.WebCamDevice",
            "method": "availableResolutions",
            "areas": ["Memory"],
            "problem": "The property WebCamDevice.availableResolutions allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0147",
            "type": "UnityEngine.WebCamTexture",
            "method": "devices",
            "areas": ["Memory"],
            "problem": "The property WebCamTexture.devices allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0148",
            "type": "UnityEngine.Cloth",
            "method": "vertices",
            "areas": ["Memory"],
            "problem": "The property Cloth.vertices allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0149",
            "type": "UnityEngine.Cloth",
            "method": "normals",
            "areas": ["Memory"],
            "problem": "The property Cloth.normals allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0150",
            "type": "UnityEngine.Cloth",
            "method": "coefficients",
            "areas": ["Memory"],
            "problem": "The property Cloth.coefficients allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0151",
            "type": "UnityEngine.Cloth",
            "method": "capsuleColliders",
            "areas": ["Memory"],
            "problem": "The property Cloth.capsuleColliders allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0152",
            "type": "UnityEngine.Cloth",
            "method": "sphereColliders",
            "areas": ["Memory"],
            "problem": "The property Cloth.sphereColliders allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0153",
            "type": "UnityEngine.Camera",
            "method": "layerCullDistances",
            "areas": ["Memory"],
            "problem": "The property Camera.layerCullDistances allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0154",
            "type": "UnityEngine.CrashReport",
            "method": "reports",
            "areas": ["Memory"],
            "problem": "The property CrashReport.reports allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0155",
            "type": "UnityEngine.Gradient",
            "method": "colorKeys",
            "areas": ["Memory"],
            "problem": "The property Gradient.colorKeys allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0156",
            "type": "UnityEngine.Gradient",
            "method": "alphaKeys",
            "areas": ["Memory"],
            "problem": "The property Gradient.alphaKeys allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0157",
            "type": "UnityEngine.Screen",
            "method": "resolutions",
            "areas": ["Memory"],
            "problem": "The property Screen.resolutions allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0158",
            "type": "UnityEngine.LightmapSettings",
            "method": "lightmaps",
            "areas": ["Memory"],
            "problem": "The property LightmapSettings.lightmaps allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0159",
            "type": "UnityEngine.LightProbes",
            "method": "positions",
            "areas": ["Memory"],
            "problem": "The property LightProbes.positions allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0160",
            "type": "UnityEngine.LightProbes",
            "method": "bakedProbes",
            "areas": ["Memory"],
            "problem": "The property LightProbes.bakedProbes allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0161",
            "type": "UnityEngine.LightProbes",
            "method": "coefficients",
            "areas": ["Memory"],
            "problem": "The property LightProbes.coefficients allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0162",
            "type": "UnityEngine.QualitySettings",
            "method": "names",
            "areas": ["Memory"],
            "problem": "The property QualitySettings.names allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0163",
            "type": "UnityEngine.Material",
            "method": "shaderKeywords",
            "areas": ["Memory"],
            "problem": "The property Material.shaderKeywords allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0164",
            "type": "UnityEngine.Light",
            "method": "layerShadowCullDistances",
            "areas": ["Memory"],
            "problem": "The property Light.layerShadowCullDistances allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0165",
            "type": "UnityEngine.Rendering.RenderTargetBinding",
            "method": "colorRenderTargets",
            "areas": ["Memory"],
            "problem": "The property Rendering.RenderTargetBinding.colorRenderTargets allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0166",
            "type": "UnityEngine.Rendering.RenderTargetBinding",
            "method": "colorLoadActions",
            "areas": ["Memory"],
            "problem": "The property Rendering.RenderTargetBinding.colorLoadActions allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0167",
            "type": "UnityEngine.Rendering.RenderTargetBinding",
            "method": "colorStoreActions",
            "areas": ["Memory"],
            "problem": "The property Rendering.RenderTargetBinding.colorStoreActions allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0168",
            "type": "UnityEngine.SkinnedMeshRenderer",
            "method": "bones",
            "areas": ["Memory"],
            "problem": "The property SkinnedMeshRenderer.bones allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0169",
            "type": "UnityEngine.LightProbeGroup",
            "method": "probePositions",
            "areas": ["Memory"],
            "problem": "The property LightProbeGroup.probePositions allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0170",
            "type": "UnityEngine.Network",
            "method": "connections",
            "areas": ["Memory"],
            "problem": "The property Network.connections allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used.",
            "maximumVersion": "2018.4"
        },
        {
            "id": "PAC0171",
            "type": "UnityEngine.HostData",
            "method": "ip",
            "areas": ["Memory"],
            "problem": "The property HostData.ip allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used.",
            "maximumVersion": "2018.4"
        },
        {
            "id": "PAC0172",
            "type": "UnityEngine.SortingLayer",
            "method": "layers",
            "areas": ["Memory"],
            "problem": "The property SortingLayer.layers allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0173",
            "type": "UnityEngine.TextAsset",
            "method": "bytes",
            "areas": ["Memory"],
            "problem": "The property TextAsset.bytes allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0175",
            "type": "UnityEngine.iOS.NotificationServices",
            "method": "deviceToken",
            "areas": ["Memory"],
            "problem": "The property iOS.NotificationServices.deviceToken allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used.",
            "maximumVersion": "2021.3",
            "platforms": ["iOS"]
        },
        {
            "id": "PAC0176",
            "type": "UnityEngine.iOS.NotificationServices",
            "method": "scheduledLocalNotifications",
            "areas": ["Memory"],
            "problem": "The property iOS.NotificationServices.scheduledLocalNotifications allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used.",
            "maximumVersion": "2021.3",
            "platforms": ["iOS"]
        },
        {
            "id": "PAC0177",
            "type": "UnityEngine.Sprite",
            "method": "vertices",
            "areas": ["Memory"],
            "problem": "The property Sprite.vertices allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0178",
            "type": "UnityEngine.Sprite",
            "method": "triangles",
            "areas": ["Memory"],
            "problem": "The property Sprite.triangles allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0179",
            "type": "UnityEngine.Sprite",
            "method": "uv",
            "areas": ["Memory"],
            "problem": "The property Sprite.uv allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0180",
            "type": "UnityEngine.SocialPlatforms.ILocalUser",
            "method": "friends",
            "areas": ["Memory"],
            "problem": "The property SocialPlatforms.ILocalUser.friends allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0181",
            "type": "UnityEngine.SocialPlatforms.ILeaderboard",
            "method": "scores",
            "areas": ["Memory"],
            "problem": "The property SocialPlatforms.ILeaderboard.scores allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0182",
            "type": "UnityEngine.GUIStyleState",
            "method": "scaledBackgrounds",
            "areas": ["Memory"],
            "problem": "The property GUIStyleState.scaledBackgrounds allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0183",
            "type": "UnityEngine.EdgeCollider2D",
            "method": "points",
            "areas": ["Memory"],
            "problem": "The property EdgeCollider2D.points allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0184",
            "type": "UnityEngine.PolygonCollider2D",
            "method": "points",
            "areas": ["Memory"],
            "problem": "The property PolygonCollider2D.points allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0185",
            "type": "UnityEngine.Terrain",
            "method": "activeTerrains",
            "areas": ["Memory"],
            "problem": "The property Terrain.activeTerrains allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0186",
            "type": "UnityEngine.TerrainData",
            "method": "detailPrototypes",
            "areas": ["Memory"],
            "problem": "The property TerrainData.detailPrototypes allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0187",
            "type": "UnityEngine.TerrainData",
            "method": "treePrototypes",
            "areas": ["Memory"],
            "problem": "The property TerrainData.treePrototypes allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0188",
            "type": "UnityEngine.TerrainData",
            "method": "splatPrototypes",
            "areas": ["Memory"],
            "problem": "The property TerrainData.splatPrototypes allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0189",
            "type": "UnityEngine.TerrainData",
            "method": "terrainLayers",
            "areas": ["Memory"],
            "problem": "The property TerrainData.terrainLayers allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0190",
            "type": "UnityEngine.Tilemaps.TileAnimationData",
            "method": "animatedSprites",
            "areas": ["Memory"],
            "problem": "The property Tilemaps.TileAnimationData.animatedSprites allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0191",
            "type": "UnityEngine.UIElements.UxmlAttributeDescription",
            "method": "obsoleteNames",
            "areas": ["Memory"],
            "problem": "The property Experimental.UIElements.UxmlAttributeDescription.obsoleteNames allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used.",
            "minimumVersion": "2019.1"
        },
        {
            "id": "PAC0200",
            "type": "UnityEngine.Networking.IMultipartFormSection",
            "method": "sectionData",
            "areas": ["Memory"],
            "problem": "The property Networking.IMultipartFormSection.sectionData allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0201",
            "type": "UnityEngine.Networking.MultipartFormDataSection",
            "method": "sectionData",
            "areas": ["Memory"],
            "problem": "The property Networking.MultipartFormDataSection.sectionData allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0202",
            "type": "UnityEngine.Networking.MultipartFormFileSection",
            "method": "sectionData",
            "areas": ["Memory"],
            "problem": "The property Networking.MultipartFormFileSection.sectionData allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0203",
            "type": "UnityEngine.WWWForm",
            "method": "data",
            "areas": ["Memory"],
            "problem": "The property WWWForm.data allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0204",
            "type": "UnityEngine.Networking.DownloadHandler",
            "method": "data",
            "areas": ["Memory"],
            "problem": "The property Networking.DownloadHandler.data allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0208",
            "type": "UnityEngine.Networking.UploadHandler",
            "method": "data",
            "areas": ["Memory"],
            "problem": "The property Networking.UploadHandler.data allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0215",
            "type": "UnityEngine.Networking.NetworkMigrationManager",
            "method": "peers",
            "areas": ["Memory"],
            "problem": "The property Networking.NetworkMigrationManager.peers allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used.",
            "maximumVersion": "2018.4"
        },
        {
            "id": "PAC0216",
            "type": "UnityEngine.Networking.NetworkServerSimple",
            "method": "messageBuffer",
            "areas": ["Memory"],
            "problem": "The property Networking.NetworkServerSimple.messageBuffer allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used.",
            "maximumVersion": "2018.4"
        },
        {
            "id": "PAC0217",
            "type": "UnityEngine.WWW",
            "method": "bytes",
            "areas": ["Memory"],
            "problem": "The property WWW.bytes allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0219",
            "type": "UnityEngine.XR.XRSettings",
            "method": "supportedDevices",
            "areas": ["Memory"],
            "problem": "The property XR.XRSettings.supportedDevices allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0220",
            "type": "UnityEngine.TestTools.Constraints.AllocatingGCMemoryConstraint",
            "method": "Arguments",
            "areas": ["Memory"],
            "problem": "The property TestTools.Constraints.AllocatingGCMemoryConstraint.Arguments allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0221",
            "type": "UnityEngine.TestTools.UnityPlatformAttribute",
            "method": "include",
            "areas": ["Memory"],
            "problem": "The property TestTools.UnityPlatformAttribute.include allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0222",
            "type": "UnityEngine.TestTools.UnityPlatformAttribute",
            "method": "exclude",
            "areas": ["Memory"],
            "problem": "The property TestTools.UnityPlatformAttribute.exclude allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
            "id": "PAC0223",
            "type": "UnityEngine.GameObject",
            "method": "tag",
            "areas": ["Memory"],
            "problem": "The GameObject.tag property allocates managed memory.",
            "solution": "Try to avoid getting this property in frequently-updated code. Prefer using GameObject.CompareTag() instead, as this does not result in managed allocations."
        },
        {
            "id": "PAC0224",
            "type": "UnityEngine.Object",
            "method": "Instantiate",
            "areas": ["CPU"],
            "problem": "Instantiating Objects at runtime can be a very expensive operation.",
            "solution": "Try to avoid calling Object.Instantiate frequently-updated code."
        },
        {
            "id": "PAC0225",
            "type": "UnityEngine.GameObject",
            "method": "AddComponent",
            "areas": ["CPU"],
            "problem": "Adding components to GameObjects at runtime can be a very expensive operation.",
            "solution": "Try to avoid getting this property in frequently-updated code. Prefer instantiating GameObjects from Prefabs will all the necessary components instead."
        },
        {
          "id": "PAC0227",
          "type": "UnityEngine.Shader",
          "method": "WarmupAllShaders",
          "areas": ["CPU"],
          "critical": "true",
          "problem": "WarmupAllShaders does not work properly on Metal and Vulkan. This might result in unexpected CPU spikes due to shader compilation.",
          "solution": "Implement a shader pre-warming mechanism which renders a small triangle for each combination of vertex format and shader used at runtime."
        },
        {
          "id": "PAC0228",
          "type": "UnityEngine.ShaderVariantCollection",
          "method": "WarmUp",
          "areas": ["CPU"],
          "critical": "true",
          "problem": "WarmUp does not work properly on Metal and Vulkan. This might result in unexpected CPU spikes due to shader compilation.",
          "solution": "Implement a shader pre-warming mechanism which renders a small triangle for each combination of vertex format and shader variant used at runtime."
        },
        {
          "id": "PAC0229",
          "type": "UnityEngine.Component",
          "method": "tag",
          "areas": ["Memory"],
          "problem": "The Component.tag property allocates managed memory.",
          "solution": "Try to avoid getting this property in frequently-updated code. Prefer using CompareTag() instead, as this does not result in managed allocations."
        },
        {
          "id": "PAC0231",
          "type": "UnityEngine.Object",
          "method": "name",
          "areas": ["Memory"],
          "problem": "The Object.name property allocates managed memory.",
          "solution": "Try to avoid getting this property in frequently-updated code. Ideally, this property should only be used during initialisation, and the results should be cached if they need to be re-used."
        },
        {
          "id": "PAC1000",
          "type": "System.Linq",
          "method": "*",
          "areas": ["Memory"],
          "problem": "Linq allocates large amounts of managed memory.",
          "solution": "We strongly advise against using Linq in any frequently-updated code. Ban its usage from the project entirely, or confine it to initialization code and use it sparingly."
        },
        {
          "id": "PAC1001",
          "type": "System.Reflection",
          "method": "*",
          "areas": ["CPU"],
          "problem": "Reflection is slow, and not generally considered performant enough for runtime code.",
          "solution": "Remove code which relies on reflection, or minimise its usage, particularly outside of initialization."
        },
        {
          "id": "PAC1002",
          "type": "System.String",
          "method": "Concat",
          "areas": ["Memory"],
          "problem": "String concatenation operations allocates managed memory",
          "solution": "Try to avoid concatenating strings in frequently-updated code. Prefer using a StringBuilder instead, as this minimizes managed allocations."
        },
        {
          "id": "PAC1003",
          "type": "System.DateTime",
          "method": "Now",
          "areas": ["CPU"],
          "problem": "System.DateTime.Now is expensive because it needs to figure out the current timezone and daylight saving time information.",
          "solution": "Try to avoid using this method in frequently-updated code. Prefer UnityEngine.Time.time or, if precise time is needed, use DateTime.UtcNow."
        },
        {
          "id": "PAC0232",
          "type": "System.AppDomain",
          "method": "GetAssemblies",
          "areas": ["CPU"],
          "problem": "<b>System.AppDomain.GetAssemblies</b> is expensive.",
          "solution": "Try to minimize calls to <b>System.AppDomain.GetAssemblies</b> by caching the returned assemblies. When possible, use <b>UnityEditor.TypeCache</b> for fast access to types, methods and fields."
        }
    ]
}
